{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","RenderComments","comments","postComment","dishId","cmnts","comment","in","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderDish","transformProps","exitTransform","top","CardBody","CardText","description","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","rating","Fragment","Button","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","for","md","Col","select","defaultValue","model","value","htmlFor","text","placeholder","validators","minLength","show","messages","textarea","resize","rows","type","color","Component","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","isNumber","isNaN","Number","validEmail","test","Contact","console","log","JSON","stringify","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","size","offset","checkbox","About","RenderLeaders","leaders","leaders_list","Media","left","object","body","heading","list","CardHeader","title","dishesFailed","errmess","payload","addDishes","addComment","addComments","commentsFailed","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de27b230.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};\n","export const baseUrl = 'http://localhost:3001/';\n","import React from 'react';\nimport { Card, CardImg, CardImgOverlay,CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n    function RenderMenuItem ({dish}) {\n        return (\n            <Card>\n                <Link to={`/menu/${dish.id}`}>\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                    <CardImgOverlay>\n                        <CardTitle>{dish.name}</CardTitle>\n                    </CardImgOverlay>\n                </Link>\n            </Card>\n        );\n    }\n\n    const Menu = (props) => {\n\n        const menu = props.dishes.dishes.map((dish) => {\n            return (\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\n                    <RenderMenuItem dish={dish}/>\n                </div>\n            );\n        });\n\n        if (props.dishes.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">            \n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.dishes.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\"> \n                        <div className=\"col-12\">\n                            <h4>{props.dishes.errMess}</h4>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Menu</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {menu}\n                    </div>\n                </div>\n            );\n    }\n\nexport default Menu;\n","import React, { Component} from 'react';\nimport { Card, CardImg, CardBody, CardText, CardTitle, \n    Breadcrumb, BreadcrumbItem, Button, Row, Col, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nfunction RenderComments({comments, postComment, dishId}) {\n        if (comments == null) {\n            return (<div></div>)\n        }\n        const cmnts = comments.map(comment => {\n            return (\n                <Fade in>\n                    <li key={comment.id}>\n                        <p>{comment.comment}</p>\n                        <p>-- {comment.author},\n                        &nbsp;\n                        {new Intl.DateTimeFormat('en-US', {\n                                year: 'numeric',\n                                month: 'short',\n                                day: '2-digit'\n                            }).format(new Date(Date.parse(comment.date)))}\n                        </p>\n                    </li>\n                </Fade>\n            )\n        })\n        return (\n            <div>\n                <h4> Comments </h4>\n                <ul className='list-unstyled'>\n                    <Stagger in>\n                        {cmnts}\n                    </Stagger>\n                </ul>\n                <CommentForm\n                    postComment={postComment}\n                    dishId={dishId}\n                     />\n\n            </div>\n        )\n    }\n\nfunction RenderDish({dish}) {\n        if (dish != null) {\n            return (\n                <div>\n                    <FadeTransform\n                        in\n                        transformProps={{\n                            exitTransform: 'scale(0.5) translateY(-50%)'\n                        }}>\n                        <Card>\n                            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n                            <CardBody>\n                                <CardTitle>{dish.name}</CardTitle>\n                                <CardText>{dish.description}</CardText>\n                            </CardBody>\n                        </Card>\n                    </FadeTransform>\n                </div>\n            )\n        }\n        else {\n            return (<div></div>)\n        }\n    }\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n            <div className=\"container\">\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil\"></span>Submit Comment</Button>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row  className=\"form-group\">\n                                <Label for=\"rating\" md={12}>Rating</Label>\n                                <Col  md={12}>\n                                    <Control.select defaultValue=\"5\" model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\" >\n                                        <option value=\"1\">1</option>\n                                        <option value=\"2\">2</option>\n                                        <option value=\"3\">3</option>\n                                        <option value=\"4\">4</option>\n                                        <option value=\"5\">5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\"  md={12}>Your Name</Label>\n                                <Col  md={12}>\n                                    <Control.text \n                                        model=\".author\" \n                                        id=\"author\" \n                                        name=\"author\"\n                                        placeholder=\"Author\"\n                                        className=\"form-control\"\n                                        validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 3 characters',\n                                            maxLength: 'Must be 15 characters or less' }} />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\"  md={12}>Comment</Label>\n                                <Col  md={12}>\n                                    <Control.textarea\n                                        model=\".comment\"\n                                        id=\"comment\"\n                                        name=\"comment\"\n                                        resize=\"none\"\n                                        rows=\"6\"\n                                        className=\"form-control\"\n                                        validators={{ required }} />\n                                    <Errors className=\"text-danger\" model=\".comment\" show=\"touched\" messages={{ required: 'Required' }} />\n                                </Col>\n                            </Row>\n\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n\n            </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst  DishDetail = (props) => {\n\n    if (props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish != null){\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr />\n                        </div>\n                </div>\n                <div className='row'>\n                <div className=\"col-12 col-md-5 m-1\">\n                    <RenderDish dish={props.dish} />\n                </div>\n                <div className=\"col-12 col-md-5 m-1\">\n                    <RenderComments comments={props.comments}\n                    postComment={props.postComment}\n                    dishId={props.dish.id} />\n                </div>\n                </div>\n            </div>\n        );\n    }\n    \n}\n\n\nexport default DishDetail","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, \n  Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, \n  ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false\n    }\n    this.toggleNav = this.toggleNav.bind(this); \n    // specifying that toggleNav will point to toggleNav of this class\n    // alternatively use it as arrow function without binding to this class\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    })\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    })\n  }\n\n  handleLogin(event) {\n    this.toggleModal();\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n        + \" Remember: \" + this.remember.checked);\n    event.preventDefault();\n\n}\n\n  render() {\n    return(\n    <React.Fragment>\n      <Navbar dark expand=\"md\">\n        <div className=\"container\">\n          <NavbarToggler onClick={this.toggleNav}></NavbarToggler>\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\n              <img src=\"/assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\n            </NavbarBrand>\n            <Collapse isOpen={this.state.isNavOpen} navbar>\n              <Nav navbar>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/home\">\n                      <span className=\"fa fa-home fa-lg\"></span> Home\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/aboutus\">\n                      <span className=\"fa fa-info fa-lg\"></span> About Us\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/menu\">\n                      <span className=\"fa fa-list fa-lg\"></span> Menu\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/contactus\">\n                      <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              <Nav className=\"ml-auto\">\n                <NavItem>\n                  <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-sign-in fa-lg\"></span>Login\n                  </Button>\n                </NavItem>\n              </Nav>\n            </Collapse>\n        </div>\n      </Navbar>\n      <Jumbotron>\n           <div className=\"container\">\n               <div className=\"row row-header\">\n                   <div className=\"col-12 col-sm-6\">\n                       <h1>Ristorante con Fusion</h1>\n                       <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                   </div>\n               </div>\n           </div>\n       </Jumbotron>\n       <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n         <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n         <ModalBody>\n         <Form onSubmit={this.handleLogin}>\n              <FormGroup>\n                  <Label htmlFor=\"username\">Username</Label>\n                  <Input type=\"text\" id=\"username\" name=\"username\"\n                      innerRef={(input) => this.username = input} />\n              </FormGroup>\n              <FormGroup>\n                  <Label htmlFor=\"password\">Password</Label>\n                  <Input type=\"password\" id=\"password\" name=\"password\"\n                      innerRef={(input) => this.password = input}  />\n              </FormGroup>\n              <FormGroup check>\n                  <Label check>\n                      <Input type=\"checkbox\" name=\"remember\"\n                      innerRef={(input) => this.remember = input}  />\n                      Remember me\n                  </Label>\n              </FormGroup>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n          </Form>\n         </ModalBody>\n       </Modal>\n    </React.Fragment>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to=\"/home\">Home</Link></li>\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\n                        <li><Link to=\"/menu\">Menu</Link></li>\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle} from 'reactstrap';\nimport { FadeTransform } from 'react-animation-components';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderCard({item, isLoading, errMess}) {\n    if (isLoading) {\n        return(\n                <Loading />\n        );\n    }\n    else if (errMess) {\n        return(\n                <h4>{errMess}</h4>\n        );\n    }\n    else \n        return(\n            // applies both fade and transform properties\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                    <CardTitle>{item.name}</CardTitle>\n                    {item.designation ? <CardSubtitle className=\"font-weight-bold\">{item.designation}</CardSubtitle> : null }\n                    <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n\n}\n\nfunction Home(props) {\n    return(\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                <RenderCard\n                    item={props.dish} \n                    isLoading={props.dishesLoading}\n                    errMess={props.dishesErrMess} \n                    />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                <RenderCard\n                    item={props.promotion}\n                    isLoading={props.promoLoading}\n                    errMess={props.promoErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                <RenderCard\n                    item={props.leader}\n                    isLoading={props.leaderLoading}\n                    errMess={props.leaderErrMess}\n          />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Label, Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form'; /* React Redux Form will manage state on our behalf*/\n\nconst required = (val) => val && val.length;\n\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\n\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\nconst isNumber = (val) => !isNaN(Number(val));\n\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n       \n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n        this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email,values.agree,values.contactType,values.message);\n    }\n\n    \n\n    render() {\n\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            1000 N ST.<br />\n                            Fairfield, Iowa<br />\n                            <i className=\"fa fa-phone\"></i>: +1-641-522-1234<br />\n                            <i className=\"fa fa-fax\"></i>: +1-641-522-1234<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"www.skype.com\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                   <div className=\"col-12\">\n                      <h3>Send us your Feedback</h3>\n                   </div>\n                    <div className=\"col-12 col-md-9\">\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                    <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={\n                                    {\n                                        size: 6,\n                                        offset: 2\n                                    }\n                                }>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox className=\"form-check-input\" model=\".agree\" name=\"agree\"/> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={\n                                    {\n                                        size: 3,\n                                        offset: 1\n                                    }\n                                }>\n                                    <Control.select className=\"form-control\" model=\".contactType\" name=\"contactType\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"8\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n               </div>\n            </div>\n        );\n\n    }\n    \n}\n\nexport default Contact;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Fade, Stagger } from 'react-animation-components';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nfunction About(props) {\n\n    const RenderLeaders = ({ leaders, leaderLoading, leaderErrMess }) => {\n    \n        const leaders_list = leaders.map(leader => {\n          return (\n            <Fade in key={leader.id}>\n              <Media>\n                <Media left>\n                  <Media object src={baseUrl + leader.image} alt={leader.name} />\n                </Media>\n                <Media body className=\"ml-3\">\n                  <Media heading>{leader.name}</Media>\n                  <p>{leader.designation}</p>\n                  <p>{leader.description}</p>\n                </Media>\n              </Media>\n            </Fade>\n          );\n        });\n        // Returning the complete leader's list\n        if (leaderLoading) {\n          return <Loading />;\n        } else if (leaderErrMess) {\n          return <h4>{leaderErrMess}</h4>;\n        } else\n          return (\n            <Media list>\n              <Stagger in>{leaders_list}</Stagger>\n            </Media>\n          );\n      };\n\n    \n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                    <RenderLeaders\n                        leaders={props.leaders}\n                        leaderLoading={props.isLoading}\n                        leaderErrMess={props.errMess}\n          />\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n// Dish Action creators\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n    .then(response => {\n        if (response.ok) {\n          return response; // this response will be available to the next .then()\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error; // will be caught in the catch block\n        }\n      },\n      error => {\n            var errMess = new Error(error.message);\n            throw errMess; // will be caught in the catch block\n      })\n    .then(response => response.json()) // when promise resolves, convert response tp JSON so that can be processed after\n    .then(dishes => dispatch(addDishes(dishes))) // add dishes to the state\n    .catch(error => dispatch(dishesFailed(error.message)));\n}\n\n// Dish Actions\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n\n// Comments Action creators\n// Action creator to post a comment\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n    \n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  {\n        console.log('post comments', error.message);\n        alert('Your comment could not be posted\\nError: '+error.message);\n    });\n};\n\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + 'comments')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errMess = new Error(error.message);\n            throw errMess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\n// Comment Actions. Functions that create an action object\nexport const addComment = (dishId, rating, author, comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\n\n// Promo Action creators\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\n// Promo Actions\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => dispatch => {\n  dispatch(leadersLoading());\n\n  return fetch(baseUrl + \"leaders\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(leaders => dispatch(addLeaders(leaders)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n};\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = errmess => ({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: errmess\n});\n\nexport const addLeaders = leaders => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n\nexport const postFeedback = (\n  firstname,\n  lastname,\n  telnum,\n  email,\n  agree,\n  contactType,\n  message\n) => dispatch => {\n  const newFeedback = {\n    firstname: firstname,\n    lastname: lastname,\n    telnum: telnum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n\n  return fetch(baseUrl + \"feedback\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        throw error;\n      }\n    )\n    .then(response => response.json())\n    .then(response =>\n      alert(\"Thank for submitting feedback!\" + JSON.stringify(response))\n    )\n    .catch(error => {\n      console.log(\"post feedbacks\", error.message);\n      alert(\"Your feedback could not be posted!\\nError: \" + error.message);\n    });\n};\n","export const ADD_COMMENT = 'ADD_COMMENT'\n\nexport const DISHES_LOADING = 'DISHES_LOADING';\n\nexport const DISHES_FAILED = 'DISHES_FAILED';\n\nexport const ADD_DISHES = 'ADD_DISHES';\n\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\n\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\n\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\n\nexport const ADD_PROMOS = 'ADD_PROMOS';\n\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\n\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\n\nexport const ADD_LEADERS = 'ADD_LEADERS';\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux'; /* Enables the Main component to subscribe to the store*/\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport Menu from './MenuComponent';\nimport DishDetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport { postComment, fetchDishes,\n  fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\n\n\nclass Main extends Component {\n\ncomponentDidMount() {\n  this.props.fetchDishes();\n  this.props.fetchComments();\n  this.props.fetchPromos();\n  this.props.fetchLeaders();\n}\n\n  render() {\n\n    console.log('leaders >>>>>', this.props.leaders)\n\n    const HomePage = () => {\n        return(\n            // render featured dish, featured promotion and featured leader\n            <Home \n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n              dishesLoading={this.props.dishes.isLoading}\n              dishErrMess={this.props.dishes.errMess}\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n              promoLoading={this.props.promotions.isLoading}\n              promoErrMess={this.props.promotions.errMess}\n              leader={\n                this.props.leaders.leaders.filter(leader => leader.featured)[0]\n              }\n              leaderLoading={this.props.leaders.isLoading}\n              leaderErrMess={this.props.leaders.errMess}\n          />\n        );\n      }\n    \n    const DishWithId = ({match}) => {\n        return(\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n            isLoading={this.props.dishes.isLoading}\n            errMess={this.props.dishes.errMess}\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n            commentsErrMess={this.props.comments.errMess}\n            postComment={this.props.postComment}\n          />\n        );\n      };\n\n    return (\n      <div>\n            {/* <Header />\n            <Switch>\n                <Route path=\"/home\" component={HomePage}/>\n                <Route exact path=\"/menu\" component={() => \n                    <Menu dishes={this.props.dishes} onClick={(dishId) => this.onDishSelect(dishId)}/>}\n                    />\n                <Route path=\"/menu/:dishId\" component={DishWithId}/>\n                <Route exact path='/contactus' component={() =>\n                  <Contact resetFeedbackForm={this.props.resetFeedbackForm} />}\n                  />\n                <Route path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />}/>\n                <Redirect to=\"/home\" />\n            </Switch>\n            <Footer /> */}\n\n            <Header />\n            <TransitionGroup>\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n              <Switch location={this.props.location}>\n                  <Route path='/home' component={HomePage} />\n                  <Route exact path='/aboutus' component={() => \n                    <About\n                      leaders={this.props.leaders.leaders}\n                      isLoading={this.props.leaders.isLoading}\n                      errMess={this.props.leaders.errMess} \n                    />} />\n                  <Route exact path='/menu' component={() => \n                    <Menu dishes={this.props.dishes} />} \n                  />\n                  <Route path='/menu/:dishId' component={DishWithId} />\n                  <Route exact path='/contactus' component={() => \n                    <Contact\n                      resetFeedbackForm={this.props.resetFeedbackForm}\n                      postFeedback={this.props.postFeedback}\n                      />}\n                  />\n                  <Redirect to=\"/home\" />\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n            <Footer />\n            \n        </div>\n        \n    );\n  }\n  \n}\n\n// dispatch is a store function accessed through the connect function\nconst mapDispatchToProps = dispatch => ({\n  \n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchDishes: () => { dispatch(fetchDishes())},\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))}, // to reset the form\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos()),\n  fetchLeaders: () => dispatch(fetchLeaders()),\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) =>\n    dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\n});\n\nconst mapStateToProps = (state) => {\n    return {\n      dishes: state.dishes,\n      comments: state.comments,\n      promotions: state.promotions,\n      leaders: state.leaders\n    }\n}\n\n// Surround Main with connect so that it is subscribed to  the store\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (Main));","import * as ActionTypes from './ActionTypes'\nexport const Dishes = (\n        state = {\n            isLoading: true,\n            errMess: null,\n            dishes:[]\n        }, action) => {\n    switch(action.type){\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []}\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n        default:\n            return state;\n    }\n\n}\n","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\n    switch (action.type) {\n      case ActionTypes.ADD_COMMENTS:\n        return {...state, errMess: null, comments: action.payload};\n  \n      case ActionTypes.COMMENTS_FAILED:\n        return {...state, errMess: action.payload};\n  \n      case ActionTypes.ADD_COMMENT:\n          var comment = action.payload;\n          return { ...state, comments: state.comments.concat(comment)};\n  \n      default:\n        return state;\n    }\n  };\n\n","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state  = { isLoading: true,\n                                        errMess: null,\n                                        promotions:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n          return state;\n      }\n};\n\n","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: null,\n                leaders: action.payload\n            };\n\n        case ActionTypes.LEADERS_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n                errMess: null,\n                leaders: []\n            }\n\n        case ActionTypes.LEADERS_FAILED:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: action.payload\n            };\n\n        default:\n            return state;\n    }\n};\n","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};\n","import React, { Component } from 'react';\nimport {BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'; /* Wraps the store around the App.js so that child components can access the store*/\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { configureStore } from './redux/configureStore';\n\nconst store = configureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}> \n        <BrowserRouter>\n        <div>\n          <Main />\n        </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport { InitialFeedback } from './forms';\n\nexport const configureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        \n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}